<MudGrid>
    <MudItem xs="12">
        <MudTextField @bind-Value="@InputText" Immediate="true" TextChanged="TextChange" Label="Select Item" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
    </MudItem>
    @if (filteredList != null && filteredList.Count>0)
    {
    <MudItem xs="12">
        <MudPaper>
            <MudList Clickable="true">
                @foreach (var item in filteredList)
                {
                    <MudListItem @onclick="()=>SelectChange(item.ItemValue)" Text="@item.ItemText" />
                }
            </MudList>
        </MudPaper>
    </MudItem>
    }
</MudGrid>
@code{
    [Parameter]
    public List<SelectModel> itemList { get; set; }
    [Parameter]
    public EventCallback<int> SelectItemChange { get; set; }

    private string InputText;
    public List<SelectModel> filteredList { get; set; }

    private void TextChange(string args)
    {
        var searchKey = args;
        if (string.IsNullOrEmpty(searchKey))
        {
            filteredList = null;
            return;
        }
        filteredList = itemList.Where(c => c.ItemText.ToLower().Contains(searchKey)).ToList();
        if (filteredList.Count == 0) {
            var checkExact = itemList.Where(c => c.ItemText.ToLower() == searchKey.ToLower()).ToList();
            if (checkExact?.Count() > 0) SelectItemChange.InvokeAsync(checkExact.FirstOrDefault().ItemValue);
        }
    }
    private void SelectChange(int value) {
        var text = itemList.Where(i => i.ItemValue == value)?.FirstOrDefault().ItemText;
        InputText = text;
        filteredList = null;
        SelectItemChange.InvokeAsync(value);
    }

}