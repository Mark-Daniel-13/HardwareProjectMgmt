@inject Auth.IAuthService AuthService
@inject NavigationManager NavManager

<div class="custom-card custom-card-shadow" style="height:100%; width:90%; min-width:350px">
    <div class="container-fluid custom-login-form">
        <div class="row login-form-header wrapper-flex-content-middle">
            <img src="img/user.png" alt="User Login" />
            <h5 class="mt-2">Sign In</h5>
        </div>
        @if (showAuthError)
        {
            <div class="row">
                <div class="alert-danger alert text-center" role="alert" style="width:100%"><p>@authErrorText</p></div>
            </div>
        }

        <div class="row">
            <EditForm Model="model" OnValidSubmit="ExecuteLogin" class="card-body">
                <DataAnnotationsValidator />
                <div class="form-group row">
                    <label for="@model.Username" class="col-md-2 col-form-label">Username:</label>
                    <div class="col-md-10">
                        <InputText id="username" class="form-control" @bind-Value="model.Username" />
                        <ValidationMessage For="@(()=>model.Username)" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="@model.Password" class="col-md-2 col-form-label">Password:</label>
                    <div class="col-md-10">
                        <InputText id="password" type="password" class="form-control" @bind-Value="model.Password" />
                        <ValidationMessage For="@(()=>model.Password)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-right">
                        <button type="submit" class="btn btn-success"> Log In</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>
@code {
    private Auth.LoginUserModel model = new();
    private bool showAuthError = false;
    private string authErrorText = "";

    private async Task ExecuteLogin()
    {
        showAuthError = false;
        var res = await AuthService.Login(model);
        if (res is not null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authErrorText = "Wrong Username or Password";
            showAuthError = true;
        }
    }
}
