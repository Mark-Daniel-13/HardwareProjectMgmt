@inject Auth.IAuthService AuthService
@inject NavigationManager NavManager
<MudPaper Elevation="6" Style="padding:2em; width:100%">
    <MudGrid class="custom-login-form">
        <MudItem xs="12" Class="login-form-header wrapper-flex-content-middle" Style="padding-bottom:0px">
            <MudIcon Icon="@Icons.Material.Filled.AccountCircle" Style="font-size: 2.5rem;" Color="Color.Info" />
            <MudText Typo="Typo.h5" Align="Align.Center">Sign In</MudText>
        </MudItem>
        @if (showAuthError)
        {
            <MudItem xs="12">
                <MudAlert Severity="Severity.Error" Style="width:100%" ContentAlignment="HorizontalAlignment.Center" Variant="Variant.Outlined">@authErrorText</MudAlert>
            </MudItem>
        }

        <MudItem xs="12" Style="padding-top:0px">
            <MudForm @ref="formModel" @bind-IsValid="formIsvalid" @bind-Errors="formErrors">
                <MudTextField T="string" Label="Username" Required="true" @bind-Value="@model.Username"  @onkeyup="EnterKeyPress" RequiredError="User name is required!" />
                <MudTextField T="string" Label="Password" InputType="InputType.Password" @onkeyup="EnterKeyPress" @bind-Value="@model.Password" Required="true" RequiredError="Password is required!" />
            </MudForm>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@ExecuteLogin" Class="mt-4" Style="width:100%">Log In</MudButton>
        </MudItem>
    </MudGrid>
</MudPaper>
@code {
    MudForm formModel;
    bool formIsvalid;
    string[] formErrors = { };
    private Auth.LoginUserModel model = new();
    private bool showAuthError = false;
    private string authErrorText = "";

    private async Task EnterKeyPress(KeyboardEventArgs args) {
        if (args.Key == "Enter") {
            await ExecuteLogin();
        }
    }
    private async Task ExecuteLogin()
    {
        await formModel.Validate();
        if (formIsvalid) {
            showAuthError = false;
            var res = await AuthService.Login(model);
            if (res is not null)
            {
                NavManager.NavigateTo("/");
            }
            else
            {
                authErrorText = "Wrong Username or Password";
                showAuthError = true;
            }
        }
    }
}
